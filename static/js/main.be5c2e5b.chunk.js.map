{"version":3,"sources":["seal.png","App.js","reportWebVitals.js","index.js"],"names":["App","props","sealStop","console","log","setState","spining","state","Counter","bind","Handlespin","this","setTimeout","className","CSSTransition","in","timeout","classNames","src","seal","alt","onClick","React","Component","ReactTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAAe,G,MAAA,IAA0B,kCCMnCA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,SAAW,WACTC,QAAQC,IAAI,aACZ,EAAKC,SAAS,CACZC,SAAS,KAXX,EAAKC,MAAQ,CACXC,QAAS,EACTF,SAAS,GAEX,EAAKJ,SAAW,EAAKA,SAASO,KAAd,gBAChB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBARD,E,yDAkBN,IAAD,OACTE,KAAKN,SAAS,CACZC,SAAUK,KAAKJ,MAAMD,QACrBE,QAASG,KAAKJ,MAAMC,QAAU,IAEhCI,YAAW,WACR,EAAKV,aACL,O,+BAEI,IAAD,OACP,OACE,sBAAKW,UAAU,MAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,8CACA,0BAEF,4BAAIF,KAAKJ,MAAMC,UACf,qBAAKK,UAAU,WAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAACC,EAAA,EAAD,CACEC,GAAIJ,KAAKJ,MAAMD,QACfU,QAAS,IACTC,WAAW,OAHb,SAKE,gCACG,qBAAKC,IAAKC,EAAMC,IAAI,OAAOC,QAAS,kBAAM,EAAKX,gBAC/CP,QAAQC,IAAIO,KAAKJ,MAAMD,yB,GA7CtBgB,IAAMC,WAuDTC,MAAaxB,GCjDbyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.be5c2e5b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/seal.84e0d9d3.png\";","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ReactTimeout from \"react-timeout\";\nimport \"./App.css\";\nimport seal from \"./seal.png\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Counter: 0,\n      spining: false,\n    };\n    this.sealStop = this.sealStop.bind(this);\n    this.Handlespin = this.Handlespin.bind(this)\n  }\n\n  sealStop = () => {\n    console.log(\"spin spin\")\n    this.setState({\n      spining: false,\n    });\n  };\n\n  Handlespin(){\n     this.setState({\n       spining: !this.state.spining,\n       Counter: this.state.Counter + 1,\n     });\n     setTimeout(() => {\n       {this.sealStop()}\n     }, 2000);\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"SealSpineerHeader\">\n          <h1>Seal Spinner</h1>\n          <hr></hr>\n        </div>\n        <p>{this.state.Counter}</p>\n        <div className=\"bodyseal\">\n          <div className=\"Sel\">\n            <CSSTransition\n              in={this.state.spining}\n              timeout={60000}\n              classNames=\"seal\"\n            >\n              <div>\n                {<img src={seal} alt=\"seal\" onClick={() => this.Handlespin()} />}\n                {console.log(this.state.spining)}\n              </div>\n            </CSSTransition>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReactTimeout(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}